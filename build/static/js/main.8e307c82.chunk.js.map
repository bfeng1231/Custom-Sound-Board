{"version":3,"sources":["components/Display.js","components/Sounds.js","actions.js","App.js","reducers/soundReducer.js","reducers/rootReducer.js","index.js"],"names":["Display","className","this","props","label","Math","round","volume","speed","Component","Sounds","state","modal","select","link","name","playing","vol","loop","playClicked","event","audio","document","getElementById","target","id","setState","playbackRate","pause","onClick","getKey","console","log","key","arr","sound","soundBank","filter","elem","keypress","handleKey","toggle","removeEventListener","addEventListener","onChange","value","onSubmit","preventDefault","editSound","setLoop","play","list","map","src","url","onKeyPress","btnToggle","background","borderColor","Col","Modal","isOpen","ModalHeader","ModalBody","Form","FormGroup","Label","for","Input","type","placeholder","Button","color","block","min","max","defaultValue","step","style","protoTypes","PropTypes","object","isRequired","func","connect","soundReducer","dispatch","App","Container","defaultState","action","i","length","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.8e307c82.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../css/display.css'\r\n\r\nclass Display extends Component {\r\n  \r\n  render() {\r\n    return(\r\n      <div className=\"panel\">\r\n        <p>Custom Sound Board</p>\r\n        <div className='display'>\r\n          <h4>{this.props.label}</h4>\r\n          <div className='stats'>\r\n            <h6>Vol: {Math.round(this.props.volume * 100)}</h6>\r\n            <h6 className='speed'>Speed: {this.props.speed}</h6>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Display","import React, { Component } from 'react';\r\nimport { Button, Row, Col, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { editSound } from '../actions';\r\nimport Display from './Display';\r\nimport '../css/sounds.css';\r\n\r\nclass Sounds extends Component {\r\n\r\n  state = {\r\n    modal: false,\r\n    select: '',\r\n    link: '',\r\n    name: '',\r\n    playing: '',\r\n    vol: 0.5,\r\n    loop: false,\r\n    speed: 1\r\n  }\r\n\r\n  async onClick (audio) {\r\n    try {\r\n      await audio.play()\r\n    } catch {\r\n      console.log(\"Invalid URL\")\r\n    }\r\n  }\r\n\r\n  playClicked = (event) => {\r\n    let audio = document.getElementById(event.target.id)\r\n    this.setState({playing: event.target.id})\r\n    audio.volume = this.state.vol\r\n    audio.playbackRate = this.state.speed\r\n    if (audio.loop) {\r\n      audio.loop = !this.state.loop\r\n      return audio.pause()\r\n    }\r\n    audio.loop = this.state.loop \r\n    this.onClick(audio)\r\n  }\r\n\r\n  async handleKey(key) {\r\n    try {\r\n      let audio = document.getElementById(key);\r\n      this.setState({playing: key})\r\n      audio.volume = this.state.vol\r\n      audio.playbackRate = this.state.speed\r\n      if (audio.loop) {\r\n        audio.loop = !this.state.loop\r\n        return audio.pause()\r\n      }\r\n      audio.loop = this.state.loop\r\n      await audio.play();\r\n    } catch {\r\n      console.log(\"Invalid URL\")\r\n    }\r\n  }\r\n\r\n  getKey = (event) => {\r\n    console.log(event.key)\r\n    let arr = this.props.sound.soundBank.filter(elem => elem.keypress === event.key)\r\n    try{\r\n      this.handleKey(arr[0].id)\r\n    } catch {\r\n      console.log(\"Not valid key\")\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.getKey)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.getKey)\r\n  }\r\n\r\n  toggle = () => {\r\n    if (this.state.modal === false)\r\n      document.removeEventListener(\"keydown\", this.getKey)\r\n    if (this.state.modal === true)\r\n      document.addEventListener(\"keydown\", this.getKey)\r\n    this.setState({modal: !this.state.modal})\r\n  }\r\n\r\n  onChange = (event) => {\r\n    this.setState({[event.target.name]: event.target.value})\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    \r\n    this.props.editSound(this.state.select, this.state.name, this.state.link)\r\n    console.log(this.state)\r\n    this.toggle();\r\n  }\r\n\r\n  setLoop = () => {\r\n    this.setState({loop: !this.state.loop})\r\n  }\r\n\r\n  render() {\r\n\r\n    let list = this.props.sound.soundBank.map(elem => (\r\n      <div key={elem.key} className=\"buttonCols\">\r\n        <audio id={elem.id} src={elem.url}></audio>\r\n        <button onClick={this.playClicked} id={elem.id} onKeyPress={this.getKey}>{elem.key}</button>\r\n      </div>\r\n    ))\r\n\r\n    const btnToggle = this.state.loop ? {background: \"yellowgreen\", borderColor: \"yellowgreen\"} : {background: \"gold\", borderColor: \"gold\"}\r\n\r\n    return (\r\n      <div className='base'>\r\n        <Col className=\"buttonSide\">\r\n\r\n          <div className=\"buttonContainer\"> \r\n            {list}\r\n          </div>\r\n\r\n          <div>\r\n            <button className='btn' onClick={this.toggle}>Edit Sounds</button>\r\n            <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n              <ModalHeader toggle={this.toggle}>\r\n                Edit Sound Board\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <Form onSubmit={this.onSubmit}>\r\n                  <FormGroup>\r\n                    <Label for=\"Select\">Select Key</Label>\r\n                    <Input type=\"select\" name=\"select\" id=\"Select\" onChange={this.onChange}>\r\n                      <option></option>\r\n                      <option value=\"Q\">Q</option>\r\n                      <option value=\"W\">W</option>\r\n                      <option value=\"E\">E</option>\r\n                      <option value=\"A\">A</option>\r\n                      <option value=\"S\">S</option>\r\n                      <option value=\"D\">D</option>\r\n                      <option value=\"Z\">Z</option>\r\n                      <option value=\"X\">X</option>\r\n                      <option value=\"C\">C</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"name\">Name</Label>\r\n                    <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Name\" onChange={this.onChange}/>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"link\">URL</Label>\r\n                    <Input type=\"url\" name=\"link\" id=\"link\" placeholder=\"Enter mp3 link\" onChange={this.onChange}/>\r\n                  </FormGroup>\r\n                  <Button color='dark' block>Submit</Button>\r\n                </Form>\r\n              </ModalBody>\r\n            </Modal>\r\n          </div>\r\n        </Col>\r\n\r\n        <Col className=\"panelSide\">\r\n          <div>\r\n            <Display label={this.state.playing} volume={this.state.vol} speed={this.state.speed}/>\r\n          </div>\r\n\r\n          <div>\r\n            <Label for=\"volume\">Volume</Label>\r\n            <Input type=\"range\" id=\"volume\" name=\"vol\" min=\"0\" max=\"1\" defaultValue=\"0.5\" step=\"0.01\" onChange={this.onChange} className='slider'/>   \r\n          </div>\r\n\r\n          <div>\r\n            <Label for=\"speed\">Speed</Label>\r\n            <Input type=\"range\" id=\"speed\" name=\"speed\" min=\"0.5\" max=\"4\" defaultValue=\"1\" step=\"0.5\" onChange={this.onChange} className='slider'/>   \r\n          </div>\r\n\r\n          <div>\r\n            <Button className='loop' onClick={this.setLoop} style={btnToggle}>Loop</Button>\r\n          </div>\r\n        </Col>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nSounds.protoTypes = {\r\n  sound: PropTypes.object.isRequired,\r\n  editSound: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  sound: state.soundReducer\r\n})\r\n\r\nexport default connect(mapStateToProps, { editSound })(Sounds);","export const editSound = (key, name, link) => (dispatch) => {\r\n  dispatch({\r\n    type: \"EDIT\",\r\n    key, name, link\r\n  })\r\n}","import React from 'react';\nimport './css/App.css';\nimport Sounds from './components/Sounds';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row } from 'reactstrap';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container>\n        <div className=\"themed-container\">\n          <Sounds />\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const defaultState = {\r\n  soundBank: [\r\n    { url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\", id: \"Drum 1\", key: \"Q\", keypress: 'q'},\r\n    { url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\", id: \"Drum 2\", key: \"W\", keypress: 'w'},\r\n    { url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\", id: \"Drum 3\", key: \"E\", keypress: 'e'},\r\n    { url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\", id: \"Piano 1\", key: \"A\", keypress: 'a'},\r\n    { url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3\", id: \"Piano 2\", key: \"S\", keypress: 's'},\r\n    { url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3\", id: \"Piano 3\", key: \"D\", keypress: 'd'},\r\n    { url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\", id: \"Clap\", key: \"Z\", keypress: 'z'},\r\n    { url: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\", id: \"Kick\", key: \"X\", keypress: 'x'},\r\n    { url: \"https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3\", id: \"Snare\", key: \"C\", keypress: 'c'},\r\n  ]\r\n}\r\n\r\nconst soundReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case \"EDIT\":\r\n      for (let i = 0; i < state.soundBank.length; i++) {\r\n        if (state.soundBank[i].key === action.key) {\r\n          console.log(\"found\")\r\n          state.soundBank[i].id = action.name\r\n          state.soundBank[i].url = action.link\r\n          console.log(state.soundBank)\r\n        }\r\n      }\r\n      return state;\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default soundReducer","import {combineReducers} from 'redux';\r\nimport soundReducer from './soundReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    soundReducer\r\n})\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}